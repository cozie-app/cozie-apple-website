"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9902],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return f}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=c(a),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return a?n.createElement(f,r(r({ref:t},s),{},{components:a})):n.createElement(f,r({ref:t},s))}));function f(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[d]="string"==typeof e?e:o,r[1]=p;for(var c=2;c<i;c++)r[c]=a[c];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9030:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return d}});var n=a(7462),o=a(3366),i=(a(7294),a(3905)),r=(a(4996),["components"]),p={id:"coziepy",title:"CoziePy",sidebar_label:"Cozie Python Package"},l="CoziePy: Python Package for Cozie",c={unversionedId:"cozie_python_package/coziepy",id:"cozie_python_package/coziepy",title:"CoziePy",description:"We have created a Python package for Cozie to make data wrangling with Cozie data as convenient as possible. The package is called CoziePy and is available on pypi.org",source:"@site/docs/5_cozie_python_package/cozie_python_package.md",sourceDirName:"5_cozie_python_package",slug:"/cozie_python_package/coziepy",permalink:"/docs/cozie_python_package/coziepy",draft:!1,editUrl:"https://github.com/cozie-app/cozie-apple-website/tree/master/docs/5_cozie_python_package/cozie_python_package.md",tags:[],version:"current",frontMatter:{id:"coziepy",title:"CoziePy",sidebar_label:"Cozie Python Package"},sidebar:"myAutogeneratedSidebar",previous:{title:"Phone Survey",permalink:"/docs/custom_surveys/custom_phone_survey"},next:{title:"Deployment",permalink:"/docs/deployment/deployment"}},s={},d=[{value:"Import CoziePy and create a <code>Cozie</code> instance",id:"import-coziepy-and-create-a-cozie-instance",level:3},{value:"Parse from Cozie app log file",id:"parse-from-cozie-app-log-file",level:3},{value:"Download data using the web API",id:"download-data-using-the-web-api",level:3},{value:"Load data from previously processed data",id:"load-data-from-previously-processed-data",level:3},{value:"Plotting",id:"plotting",level:2},{value:"Plot time-series data for one participant",id:"plot-time-series-data-for-one-participant",level:3}],u={toc:d},m="wrapper";function f(e){var t=e.components,a=(0,o.Z)(e,r);return(0,i.kt)(m,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"coziepy-python-package-for-cozie"},"CoziePy: Python Package for Cozie"),(0,i.kt)("p",null,"We have created a Python package for Cozie to make data wrangling with Cozie data as convenient as possible. The package is called CoziePy and is available on ",(0,i.kt)("a",{parentName:"p",href:"https://pypi.org/project/coziepy/"},"pypi.org")),(0,i.kt)("p",null,"The packages helps with download in Cozie data from the backend, parsing the log file from the Cozie app, and it as some plotting functionality. "),(0,i.kt)("b",null,"Please note the CoziePy is still in early development. Hence, frequent changes are to be expected."),(0,i.kt)("br",null),(0,i.kt)("br",null),(0,i.kt)("h1",{id:"load-data"},"Load data"),(0,i.kt)("p",null,"There are several ways to load Cozie data. We have listed a few examples below."),(0,i.kt)("h3",{id:"import-coziepy-and-create-a-cozie-instance"},"Import CoziePy and create a ",(0,i.kt)("inlineCode",{parentName:"h3"},"Cozie")," instance"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from coziepy import Cozie\ncozie = Cozie()\n")),(0,i.kt)("h3",{id:"parse-from-cozie-app-log-file"},"Parse from Cozie app log file"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"log_file")," is the path to the file ",(0,i.kt)("a",{parentName:"p",href:"docs/download_data/data_download_offline"},"downloaded from within the Cozie app"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"output_file")," is an optional input parameter to save the Cozie dataframe as zipped parquet file. Alternatively, .csv is also a valid file extension but results in approximately ten times larger files."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"clean_up")," currently needs to set to 'False' when parsing offline log files."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'df = cozie.load(\n    log_file="/content/cozie_example_participant_01_example_experiment_logs.txt",\n    clean_up=False,\n    output_file="example.parquet.gzip",\n)\ndf.head()\n')),(0,i.kt)("h3",{id:"download-data-using-the-web-api"},"Download data using the web API"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"api_key")," is provided by us. Please contact us at ",(0,i.kt)("a",{parentName:"p",href:"mailto:cozie.app@gmail.com"},"cozie.app@gmail.com")," if you need one."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'df = cozie.load(\n    id_experiment="example_experiment",\n    participant_list=["example_participant_01", "example_participant_02"],\n    timezone="Asia/Singapore",\n    api_url="https://m7cy76lxmi.execute-api.ap-southeast-1.amazonaws.com/default/cozie-apple-researcher-read-influx",\n    api_key="XXX",\n    output_file="example.parquet.gzip",\n)\ndf.head()\n\n')),(0,i.kt)("h3",{id:"load-data-from-previously-processed-data"},"Load data from previously processed data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'df = cozie.load(input_file="example.parquet.gzip")\ndf.head()\n')),(0,i.kt)("h2",{id:"plotting"},"Plotting"),(0,i.kt)("p",null,"CoziePy has some plotting functionality which is mainly focused on experiment monitoring and debugging. In the examples below it is assumed that you have already generated a Pandas dataframe containing Cozie data using one of the examples above."),(0,i.kt)("h3",{id:"plot-time-series-data-for-one-participant"},"Plot time-series data for one participant"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'fig, ax = cp.ts_inspection(\n    id_participant="example_participant_01", column_name="ts_heart_rate"\n)\n')))}f.isMDXComponent=!0}}]);