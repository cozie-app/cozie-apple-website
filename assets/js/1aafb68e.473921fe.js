"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1749],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),m=o,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||r;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9191:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return p}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=(n(4996),["components"]),l={id:"c3_download_online",title:"Data Download (online)",sidebar_label:"Data Download (online)",sidebar_position:7},s=void 0,d={unversionedId:"cozie_v3/c3_download_online",id:"cozie_v3/c3_download_online",title:"Data Download (online)",description:"Download the data collected using the Cozie Apple Watch survey",source:"@site/docs/3_cozie_v3/data_download_online.md",sourceDirName:"3_cozie_v3",slug:"/cozie_v3/c3_download_online",permalink:"/docs/cozie_v3/c3_download_online",draft:!1,editUrl:"https://github.com/cozie-app/cozie-apple-website/tree/master/docs/3_cozie_v3/data_download_online.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{id:"c3_download_online",title:"Data Download (online)",sidebar_label:"Data Download (online)",sidebar_position:7},sidebar:"myAutogeneratedSidebar",previous:{title:"Data Overview",permalink:"/docs/cozie_v3/c3_data_overview"},next:{title:"Data Download (offline)",permalink:"/docs/cozie_v3/c3_download_offline"}},c={},p=[{value:"Download the data collected using the Cozie Apple Watch survey",id:"download-the-data-collected-using-the-cozie-apple-watch-survey",level:2},{value:"Watch survey data",id:"watch-survey-data",level:3},{value:"Physiological data",id:"physiological-data",level:3},{value:"Column names &amp; watch surveys",id:"column-names--watch-surveys",level:2}],u={toc:p},m="wrapper";function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)(m,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"download-the-data-collected-using-the-cozie-apple-watch-survey"},"Download the data collected using the Cozie Apple Watch survey"),(0,r.kt)("p",null,"You can download the data you have collected using the Cozie Apple Watch survey using the following Python code.\nPlease note that you will have to specify your ",(0,r.kt)("inlineCode",{parentName:"p"},"ID_PARTICIPANT"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ID_EXPERIMENT")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"API_KEY"),".\nYou can request an ",(0,r.kt)("inlineCode",{parentName:"p"},"API_KEY")," by emailing us a request at ",(0,r.kt)("a",{parentName:"p",href:"mailto:cozie.app@gmail.com"},"cozie.app@gmail.com")),(0,r.kt)("p",null,"All the data saved inside the Pandas dataframe called ",(0,r.kt)("inlineCode",{parentName:"p"},"df"),". The example below is tested with Pandas version 1.3.5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import requests\nimport json\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport shutil\n\n# Settings\nYOUR_TIMEZONE = 'Asia/Singapore'\nID_PARTICIPANT = 'ExternalUser'\nID_EXPERIMENT = 'AppleStore'\nWEEKS = \"2\"  # Number of weeks from which the data is retrieved, starting from now\nAPI_KEY = '' # reach out to cozie.app@gmail.com for an API_KEY\n\n# Query data\npayload = {'id_participant': ID_PARTICIPANT,'id_experiment': ID_EXPERIMENT, 'weeks': WEEKS}\nheaders = {\"Accept\": \"application/json\", 'x-api-key': API_KEY}\nresponse = requests.get('https://m7cy76lxmi.execute-api.ap-southeast-1.amazonaws.com/default/cozie-apple-researcher-read-influx', params=payload, headers=headers)\nurl = response.content\n\n# Download zipped CSV file with Cozie data\nwith requests.get(url, stream=True) as r:\n    with open('cozie.zip', 'wb') as f:\n        shutil.copyfileobj(r.raw, f)\n\n# Convert zipped CSV file with Cozie to dataframe\nwith open('cozie.zip', 'rb') as f:\n      df = pd.read_csv(f, compression={'method': 'zip', 'archive_name': 'sample.csv'})\n\ndf = df.drop(columns=['Unnamed: 0'])\ndf['index'] = pd.to_datetime(df['index'])\ndf = df.set_index('index')\ndf.index = df.index.tz_convert(YOUR_TIMEZONE)\n\n# Display dataframe\ndf.head()\n")),(0,r.kt)("h3",{id:"watch-survey-data"},"Watch survey data"),(0,r.kt)("p",null,"If you want to focus on the analysis of the watch-based survey data use the code below to filter the dataframe retrieved above."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# Get only question flow responses\ndf_questions = df[df["ws_survey_count"].notna()]\ndf_questions.head()\n')),(0,r.kt)("h3",{id:"physiological-data"},"Physiological data"),(0,r.kt)("p",null,"Use the code below to plot noise and heart rate data contained in the dataframe retrieved above. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# Plot time-series data\nfig, ax = plt.subplots(1,2, figsize =(15, 7))\n\n# Heart rate\ndf["ts_heart_rate"].plot(ax=ax[0], style=\'.\')\nax[0].set_title("Heart Rate", fontsize=18)\nax[0].set_ylabel("Heart Rate [bpm]", fontsize=14)\nax[0].set_xlabel("Time", fontsize=14)\n\n# Noise\ndf["ts_audio_exposure_environment"].plot(ax=ax[1], style=\'.\')\nax[1].set_title("Sound Pressure", fontsize=18)\nax[1].set_ylabel("Sound Pressure [dBA]", fontsize=14)\nax[1].set_xlabel("Time", fontsize=14)\n')),(0,r.kt)("h2",{id:"column-names--watch-surveys"},"Column names & watch surveys"),(0,r.kt)("p",null,"The description for all column names and the watch survey questions are available on separate pages:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"c3_data_overview"},"Column names")),(0,r.kt)("li",{parentName:"ul"},"[Thermal (short)]"," "),(0,r.kt)("li",{parentName:"ul"},"[Thermal (long)]"),(0,r.kt)("li",{parentName:"ul"},"[Noise and Privacy]"),(0,r.kt)("li",{parentName:"ul"},"[Infection Risk]"),(0,r.kt)("li",{parentName:"ul"},"[Movement]"),(0,r.kt)("li",{parentName:"ul"},"[Privacy]")))}f.isMDXComponent=!0}}]);